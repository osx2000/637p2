

//
//    Sfront example: how to use input_bus and the sample wavetable generator
//
//    The audio files are voice recordings of Linus Torvalds found on
//    Eric Raymond's Linus Torvalds FAQ -- assumed to be public domain.
//    
//
// Copyright (c) 1999-2006, Regents of the University of California
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//  Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//
//  Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in the
//  documentation and/or other materials provided with the distribution.
//
//  Neither the name of the University of California, Berkeley nor the
//  names of its contributors may be used to endorse or promote products
//  derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//    Maintainer: John Lazzaro, lazzaro@cs.berkeley.edu
//


//
// English Linus comes in through the input_bus
// Swedish Linus is read into a table using sample wavetable generator

global {
  krate 1000;
  outchannels 2;
  send (mixer; ; input_bus);
  table swedish(sample, -1, "swedish.wav");
}

///
// simple signal processing to eliminate bad recording quality. Feel
// free to write something more sophisticated and contribute it.
//

instr mixer () {
  
  imports table swedish;
  asig l, r, orig;
  
  orig = doscil(swedish);

  // massively filter to capture fundamental while losing clicks

  l = lopass(lopass(lopass(orig, 700), 700), 700);
  r = lopass(lopass(lopass(input[0], 700), 700), 700);
	     
  // add back a little of original to keep some high frequencies.
  // different languages on the two channels.

  output(l + 0.2*orig, r + 0.2*input[0]);

}
